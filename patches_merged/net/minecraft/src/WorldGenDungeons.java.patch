--- a/net/minecraft/src/WorldGenDungeons.java
+++ b/net/minecraft/src/WorldGenDungeons.java
@@ -3,47 +3,64 @@
 import java.util.Random;
 
 public class WorldGenDungeons extends WorldGenerator {
-    public boolean generate(World world1, Random random2, int i3, int i4, int i5) {
-        byte b6 = 3;
-        int i7 = random2.nextInt(2) + 2;
-        int i8 = random2.nextInt(2) + 2;
+    public boolean generate(World world1, Random random2, int spawnX, int spawnY, int spawnZ) {
+        // Variables
+        byte height = 3;
+        int width = random2.nextInt(4) + 2;
+        int depth = random2.nextInt(4) + 2;
         int i9 = 0;
 
-        int i10;
-        int i11;
-        int i12;
-        for(i10 = i3 - i7 - 1; i10 <= i3 + i7 + 1; ++i10) {
-            for(i11 = i4 - 1; i11 <= i4 + b6 + 1; ++i11) {
-                for(i12 = i5 - i8 - 1; i12 <= i5 + i8 + 1; ++i12) {
-                    Material material13 = world1.getBlockMaterial(i10, i11, i12);
-                    if(i11 == i4 - 1 && !material13.isSolid()) {
-                        return false;
-                    }
-
-                    if(i11 == i4 + b6 + 1 && !material13.isSolid()) {
-                        return false;
-                    }
-
-                    if((i10 == i3 - i7 - 1 || i10 == i3 + i7 + 1 || i12 == i5 - i8 - 1 || i12 == i5 + i8 + 1) && i11 == i4 && world1.getBlockId(i10, i11, i12) == 0 && world1.getBlockId(i10, i11 + 1, i12) == 0) {
-                        ++i9;
+        int x;
+        int y;
+        int z;
+
+        // Check for space
+        for(x = spawnX - width - 1; x <= spawnX + width + 1; ++x) {
+            for(y = spawnY - 1; y <= spawnY + height + 1; ++y) {
+                for(z = spawnZ - depth - 1; z <= spawnZ + depth + 1; ++z) {
+                    Material material13 = world1.getBlockMaterial(x, y, z);
+                    if(y == spawnY - 1 && !material13.isSolid()) {
+//                        return false;
+                    }
+
+                    if(y == spawnY + height + 1 && !material13.isSolid()) {
+//                        return false;
+                    }
+
+                    if(
+                        (x == spawnX - width - 1
+                         || x == spawnX + width + 1
+                         || z == spawnZ - depth - 1
+                         || z == spawnZ + depth + 1)
+                        && y == spawnY && world1.getBlockId(x, y, z) == 0
+                        && world1.getBlockId(x, y + 1, z) == 0) {
+                        ++i9; // Suitable entrance found
                     }
                 }
             }
         }
 
         if(i9 >= 1 && i9 <= 5) {
-            for(i10 = i3 - i7 - 1; i10 <= i3 + i7 + 1; ++i10) {
-                for(i11 = i4 + b6; i11 >= i4 - 1; --i11) {
-                    for(i12 = i5 - i8 - 1; i12 <= i5 + i8 + 1; ++i12) {
-                        if(i10 != i3 - i7 - 1 && i11 != i4 - 1 && i12 != i5 - i8 - 1 && i10 != i3 + i7 + 1 && i11 != i4 + b6 + 1 && i12 != i5 + i8 + 1) {
-                            world1.setBlockWithNotify(i10, i11, i12, 0);
-                        } else if(i11 >= 0 && !world1.getBlockMaterial(i10, i11 - 1, i12).isSolid()) {
-                            world1.setBlockWithNotify(i10, i11, i12, 0);
-                        } else if(world1.getBlockMaterial(i10, i11, i12).isSolid()) {
-                            if(i11 == i4 - 1 && random2.nextInt(4) != 0) {
-                                world1.setBlockWithNotify(i10, i11, i12, Block.cobblestoneMossy.blockID);
+            // Walls + floor
+            for(x = spawnX - width - 1; x <= spawnX + width + 1; ++x) {
+                for(y = spawnY + height; y >= spawnY - 1; --y) {
+                    for(z = spawnZ - depth - 1; z <= spawnZ + depth + 1; ++z) {
+                        if(x != spawnX - width - 1
+                           && y != spawnY - 1
+                           && z != spawnZ - depth - 1
+                           && x != spawnX + width + 1
+                           && y != spawnY + height + 1
+                           && z != spawnZ + depth + 1) {
+                            world1.setBlockWithNotify(x, y, z, 0);
+                        } else if(y >= 0 && !world1.getBlockMaterial(x, y - 1, z).isSolid()) {
+                            world1.setBlockWithNotify(x, y, z, 0);
+                        } else if(world1.getBlockMaterial(x, y, z).isSolid()
+                                  || y == spawnY + height + 1
+                                  || y == spawnY - 1) {
+                            if(y == spawnY - 1 && random2.nextInt(4) != 0) {
+                                world1.setBlockWithNotify(x, y, z, Block.cobblestoneMossy.blockID);
                             } else {
-                                world1.setBlockWithNotify(i10, i11, i12, Block.cobblestone.blockID);
+                                world1.setBlockWithNotify(x, y, z, Block.cobblestone.blockID);
                             }
                         }
                     }
@@ -51,35 +68,35 @@
             }
 
             label110:
-            for(i10 = 0; i10 < 2; ++i10) {
-                for(i11 = 0; i11 < 3; ++i11) {
-                    i12 = i3 + random2.nextInt(i7 * 2 + 1) - i7;
-                    int i14 = i5 + random2.nextInt(i8 * 2 + 1) - i8;
-                    if(world1.getBlockId(i12, i4, i14) == 0) {
+            for(x = 0; x < 4; ++x) {
+                for(y = 0; y < 4; ++y) {
+                    z = spawnX + random2.nextInt(width * 2 + 1) - width;
+                    int i14 = spawnZ + random2.nextInt(depth * 2 + 1) - depth;
+                    if(world1.getBlockId(z, spawnY, i14) == 0) {
                         int i15 = 0;
-                        if(world1.getBlockMaterial(i12 - 1, i4, i14).isSolid()) {
-                            ++i15;
-                        }
-
-                        if(world1.getBlockMaterial(i12 + 1, i4, i14).isSolid()) {
-                            ++i15;
-                        }
-
-                        if(world1.getBlockMaterial(i12, i4, i14 - 1).isSolid()) {
-                            ++i15;
-                        }
-
-                        if(world1.getBlockMaterial(i12, i4, i14 + 1).isSolid()) {
+                        if(world1.getBlockMaterial(z - 1, spawnY, i14).isSolid()) {
+                            ++i15;
+                        }
+
+                        if(world1.getBlockMaterial(z + 1, spawnY, i14).isSolid()) {
+                            ++i15;
+                        }
+
+                        if(world1.getBlockMaterial(z, spawnY, i14 - 1).isSolid()) {
+                            ++i15;
+                        }
+
+                        if(world1.getBlockMaterial(z, spawnY, i14 + 1).isSolid()) {
                             ++i15;
                         }
 
                         if(i15 == 1) {
-                            world1.setBlockWithNotify(i12, i4, i14, Block.chest.blockID);
-                            TileEntityChest tileEntityChest16 = (TileEntityChest)world1.getBlockTileEntity(i12, i4, i14);
+                            world1.setBlockWithNotify(z, spawnY, i14, Block.chest.blockID);
+                            TileEntityChest tileEntityChest16 = (TileEntityChest)world1.getBlockTileEntity(z, spawnY, i14);
                             int i17 = 0;
 
                             while(true) {
-                                if(i17 >= 8) {
+                                if(i17 >= 16) {
                                     continue label110;
                                 }
 
@@ -95,18 +112,61 @@
                 }
             }
 
-            world1.setBlockWithNotify(i3, i4, i5, Block.mobSpawner.blockID);
-            TileEntityMobSpawner tileEntityMobSpawner19 = (TileEntityMobSpawner)world1.getBlockTileEntity(i3, i4, i5);
-            tileEntityMobSpawner19.mobID = this.pickMobSpawner(random2);
+            int spawners = random2.nextInt(2) + 1;
+            int spx;
+            int spz;
+            for (int spi = 0; spi < spawners; spi++) {
+                do {
+                    spx = spawnX + random2.nextInt(width * 2 + 1) - width;
+                    spz = spawnZ + random2.nextInt(depth * 2 + 1) - depth;
+                } while (world1.getBlockId(spx, spawnY, spz) == Block.chest.blockID);
+                world1.setBlockWithNotify(spx, spawnY, spz, Block.mobSpawner.blockID);
+                TileEntityMobSpawner tileEntityMobSpawner19 = (TileEntityMobSpawner)world1.getBlockTileEntity(spx, spawnY, spz);
+                tileEntityMobSpawner19.mobID = this.pickMobSpawner(random2);
+            }
             return true;
         } else {
             return false;
         }
     }
 
+	private static final Item[] charms = new Item[] {
+	Item.quiver,
+    Item.wardingRing,
+	Item.repairKit,
+	Item.slimeShoes
+    };
+
     private ItemStack pickCheckLootItem(Random random1) {
-        int i2 = random1.nextInt(11);
-        return i2 == 0 ? new ItemStack(Item.saddle) : (i2 == 1 ? new ItemStack(Item.ingotIron, random1.nextInt(4) + 1) : (i2 == 2 ? new ItemStack(Item.bread) : (i2 == 3 ? new ItemStack(Item.wheat, random1.nextInt(4) + 1) : (i2 == 4 ? new ItemStack(Item.gunpowder, random1.nextInt(4) + 1) : (i2 == 5 ? new ItemStack(Item.silk, random1.nextInt(4) + 1) : (i2 == 6 ? new ItemStack(Item.bucketEmpty) : (i2 == 7 && random1.nextInt(100) == 0 ? new ItemStack(Item.appleGold) : (i2 == 8 && random1.nextInt(2) == 0 ? new ItemStack(Item.redstone, random1.nextInt(4) + 1) : (i2 == 9 && random1.nextInt(10) == 0 ? new ItemStack(Item.itemsList[Item.record13.shiftedIndex + random1.nextInt(2)]) : null)))))))));
+        int i2 = random1.nextInt(13);
+        switch (i2) {
+            case 0: return new ItemStack(Item.silk);
+            case 1: return new ItemStack(Item.ingotIron, random1.nextInt(3) + 1);
+            case 2: return new ItemStack(Item.bread);
+            case 3: return new ItemStack(Item.wheat, random1.nextInt(3) + 1);
+            case 4: return new ItemStack(Item.gunpowder, random1.nextInt(3) + 1);
+            case 5: return new ItemStack(Item.silk, random1.nextInt(3) + 1);
+            case 6: return new ItemStack(Item.bucketEmpty);
+        }
+        if (i2 == 7 && random1.nextInt(100) == 0) {
+            return new ItemStack(Item.appleGold);
+        }
+        if (i2 == 8 && random1.nextInt(2) == 0) {
+            return new ItemStack(Item.redstone, random1.nextInt(3) + 1);
+        }
+        if (i2 == 9 && random1.nextInt(10) == 0) {
+            return new ItemStack(Item.itemsList[Item.record13.shiftedIndex + random1.nextInt(3)]);
+        }
+        if (i2 == 10 && random1.nextInt(20) == 0) {
+            return new ItemStack(Item.diamond, random1.nextInt(3) + 1);
+        }
+		if (i2 == 11 && random1.nextInt(10) == 0) {
+            return new ItemStack(Item.saddle);
+        }
+		if (i2 == 12 && random1.nextInt(50) == 0) {
+            return new ItemStack(charms[random1.nextInt(charms.length)]);
+        }
+        return null;
     }
 
     private String pickMobSpawner(Random random1) {
