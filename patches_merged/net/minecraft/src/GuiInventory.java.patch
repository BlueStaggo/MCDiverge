--- a/net/minecraft/src/GuiInventory.java
+++ b/net/minecraft/src/GuiInventory.java
@@ -3,27 +3,33 @@
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.opengl.GL12;
 
+import java.util.ArrayList;
+import java.util.Optional;
+
 public class GuiInventory extends GuiContainer {
     private CraftingInventoryPlayerCB craftingInventory;
     private float xSize_lo;
     private float ySize_lo;
+    private int mouseX;
+    private int mouseY;
 
     public GuiInventory(IInventory iInventory1, ItemStack[] itemStack2) {
         this.allowUserInput = true;
         this.craftingInventory = new CraftingInventoryPlayerCB(itemStack2);
-        this.inventorySlots.add(new SlotCrafting(this, this.craftingInventory.craftMatrix, this.craftingInventory.craftResult, 0, 144, 36));
+        this.inventorySlots.add(new SlotCrafting(this, this.craftingInventory.craftMatrix, this.craftingInventory.craftResult, 0, 144, 27));
 
         int i3;
         int i4;
         for(i3 = 0; i3 < 2; ++i3) {
             for(i4 = 0; i4 < 2; ++i4) {
-                this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftMatrix, i4 + i3 * 2, 88 + i4 * 18, 26 + i3 * 18));
+                this.inventorySlots.add(new SlotInventory(this, this.craftingInventory.craftMatrix, i4 + i3 * 2, 88 + i4 * 18, 17 + i3 * 18));
             }
         }
 
         for(i3 = 0; i3 < 4; ++i3) {
             this.inventorySlots.add(new SlotArmor(this, this, iInventory1, iInventory1.getSizeInventory() - 1 - i3, 8, 8 + i3 * 18, i3));
         }
+        this.inventorySlots.add(new SlotArmor(this, this, iInventory1, iInventory1.getSizeInventory() - 5, 80, 62, 4));
 
         for(i3 = 0; i3 < 3; ++i3) {
             for(i4 = 0; i4 < 9; ++i4) {
@@ -38,13 +44,15 @@
     }
 
     protected void drawGuiContainerForegroundLayer() {
-        this.fontRenderer.drawString("Crafting", 86, 16, 4210752);
+        this.fontRenderer.drawString("Crafting", 86, 7, 4210752);
     }
 
     public void drawScreen(int mouseX, int mouseY, float renderPartialTick) {
         super.drawScreen(mouseX, mouseY, renderPartialTick);
         this.xSize_lo = (float)mouseX;
         this.ySize_lo = (float)mouseY;
+        this.mouseX = mouseX;
+        this.mouseY = mouseY;
     }
 
     protected void drawGuiContainerBackgroundLayer(float renderPartialTick) {
@@ -81,5 +89,15 @@
         GL11.glPopMatrix();
         RenderHelper.disableStandardItemLighting();
         GL11.glDisable(GL12.GL_RESCALE_NORMAL);
+    }
+
+    protected void keyTyped(char c1, int i2) {
+        super.keyTyped(c1, i2);
+        if (i2 == this.mc.options.keyBindRecipeGuide.keyCode) {
+            Optional<SlotInventory> hoverSlot = ((ArrayList<SlotInventory>)this.inventorySlots).stream()
+                    .filter(slot -> (slot).getIsMouseOverSlot(mouseX, mouseY))
+                    .findFirst();
+            hoverSlot.ifPresent(slotInventory -> mc.thePlayer.displayGUIRecipeGuide(slotInventory.getStack()));
+        }
     }
 }
