--- a/net/minecraft/src/RenderBlocks.java
+++ b/net/minecraft/src/RenderBlocks.java
@@ -30,7 +30,7 @@
     public boolean renderBlockTorch(Block block, int x, int y, int z) {
         int i5 = this.blockAccess.getBlockMetadata(x, y, z);
         Tessellator tessellator6 = Tessellator.instance;
-        float f7 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f7 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         if(Block.lightValue[block.blockID] > 0) {
             f7 = 1.0F;
         }
@@ -86,7 +86,7 @@
             this.overrideBlockTexture = -1;
         }
 
-        float f13 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f13 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         if(Block.lightValue[block.blockID] > 0) {
             f13 = 1.0F;
         }
@@ -224,7 +224,7 @@
             i6 = this.overrideBlockTexture;
         }
 
-        float f7 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f7 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         tessellator5.setColorOpaque_F(f7, f7, f7);
         int i8 = (i6 & 15) << 4;
         int i9 = i6 & 240;
@@ -412,7 +412,7 @@
             i6 = this.overrideBlockTexture;
         }
 
-        float f7 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f7 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         tessellator5.setColorOpaque_F(f7, f7, f7);
         int i8 = (i6 & 15) << 4;
         int i9 = i6 & 240;
@@ -565,7 +565,7 @@
             i7 = this.overrideBlockTexture;
         }
 
-        float f8 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f8 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         tessellator5.setColorOpaque_F(f8, f8, f8);
         int i9 = (i7 & 15) << 4;
         int i10 = i7 & 240;
@@ -633,7 +633,7 @@
             i6 = this.overrideBlockTexture;
         }
 
-        float f7 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f7 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         tessellator5.setColorOpaque_F(f7, f7, f7);
         int i8 = (i6 & 15) << 4;
         int i9 = i6 & 240;
@@ -677,7 +677,7 @@
 
     public boolean renderBlockReed(Block block, int x, int y, int z) {
         Tessellator tessellator5 = Tessellator.instance;
-        float f6 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f6 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         tessellator5.setColorOpaque_F(f6, f6, f6);
         this.renderCrossedSquares(block, this.blockAccess.getBlockMetadata(x, y, z), (double)x, (double)y, (double)z);
         return true;
@@ -685,7 +685,7 @@
 
     public boolean renderBlockCrops(Block block, int x, int y, int z) {
         Tessellator tessellator5 = Tessellator.instance;
-        float f6 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f6 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         tessellator5.setColorOpaque_F(f6, f6, f6);
         this.renderBlockCropsImpl(block, this.blockAccess.getBlockMetadata(x, y, z), (double)x, (double)((float)y - 0.0625F), (double)z);
         return true;
@@ -875,7 +875,7 @@
 
                 f32 = MathHelper.sin(f25) * 8.0F / 256.0F;
                 f33 = MathHelper.cos(f25) * 8.0F / 256.0F;
-                f34 = block.getBlockBrightness(this.blockAccess, x, y, z);
+                f34 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
                 tessellator5.setColorOpaque_F(f11 * f34, f11 * f34, f11 * f34);
                 tessellator5.addVertexWithUV((double)(x + 0), (double)((float)y + f20), (double)(z + 0), d28 - (double)f33 - (double)f32, d30 - (double)f33 + (double)f32);
                 tessellator5.addVertexWithUV((double)(x + 0), (double)((float)y + f21), (double)(z + 1), d28 - (double)f33 + (double)f32, d30 + (double)f33 + (double)f32);
@@ -884,7 +884,7 @@
             }
 
             if(this.renderAllFaces || z7) {
-                float f48 = block.getBlockBrightness(this.blockAccess, x, y - 1, z);
+                float f48 = block.getBlockRenderBrightness(this.blockAccess, x, y - 1, z);
                 tessellator5.setColorOpaque_F(f10 * f48, f10 * f48, f10 * f48);
                 this.renderBottomFace(block, (double)x, (double)y, (double)z, block.getBlockTextureFromSide(0));
                 z9 = true;
@@ -952,7 +952,7 @@
                     double d41 = (double)(((float)i51 + (1.0F - f31) * 16.0F) / 256.0F);
                     double d43 = (double)(((float)i51 + (1.0F - f32) * 16.0F) / 256.0F);
                     double d45 = ((double)(i51 + 16) - 0.01D) / 256.0D;
-                    float f47 = block.getBlockBrightness(this.blockAccess, i49, y, i27);
+                    float f47 = block.getBlockRenderBrightness(this.blockAccess, i49, y, i27);
                     if(i24 < 2) {
                         f47 *= f12;
                     } else {
@@ -1012,43 +1012,43 @@
         float f9 = 0.6F;
         Tessellator tessellator10 = Tessellator.instance;
         tessellator10.startDrawingQuads();
-        float f11 = block.getBlockBrightness(worldObj, x, y, z);
-        float f12 = block.getBlockBrightness(worldObj, x, y - 1, z);
+        float f11 = block.getBlockRenderBrightness(worldObj, x, y, z);
+        float f12 = block.getBlockRenderBrightness(worldObj, x, y - 1, z);
         if(f12 < f11) {
             f12 = f11;
         }
 
         tessellator10.setColorOpaque_F(f6 * f12, f6 * f12, f6 * f12);
         this.renderBottomFace(block, -0.5D, -0.5D, -0.5D, block.getBlockTextureFromSide(0));
-        f12 = block.getBlockBrightness(worldObj, x, y + 1, z);
+        f12 = block.getBlockRenderBrightness(worldObj, x, y + 1, z);
         if(f12 < f11) {
             f12 = f11;
         }
 
         tessellator10.setColorOpaque_F(f7 * f12, f7 * f12, f7 * f12);
         this.renderTopFace(block, -0.5D, -0.5D, -0.5D, block.getBlockTextureFromSide(1));
-        f12 = block.getBlockBrightness(worldObj, x, y, z - 1);
+        f12 = block.getBlockRenderBrightness(worldObj, x, y, z - 1);
         if(f12 < f11) {
             f12 = f11;
         }
 
         tessellator10.setColorOpaque_F(f8 * f12, f8 * f12, f8 * f12);
         this.renderEastFace(block, -0.5D, -0.5D, -0.5D, block.getBlockTextureFromSide(2));
-        f12 = block.getBlockBrightness(worldObj, x, y, z + 1);
+        f12 = block.getBlockRenderBrightness(worldObj, x, y, z + 1);
         if(f12 < f11) {
             f12 = f11;
         }
 
         tessellator10.setColorOpaque_F(f8 * f12, f8 * f12, f8 * f12);
         this.renderWestFace(block, -0.5D, -0.5D, -0.5D, block.getBlockTextureFromSide(3));
-        f12 = block.getBlockBrightness(worldObj, x - 1, y, z);
+        f12 = block.getBlockRenderBrightness(worldObj, x - 1, y, z);
         if(f12 < f11) {
             f12 = f11;
         }
 
         tessellator10.setColorOpaque_F(f9 * f12, f9 * f12, f9 * f12);
         this.renderNorthFace(block, -0.5D, -0.5D, -0.5D, block.getBlockTextureFromSide(4));
-        f12 = block.getBlockBrightness(worldObj, x + 1, y, z);
+        f12 = block.getBlockRenderBrightness(worldObj, x + 1, y, z);
         if(f12 < f11) {
             f12 = f11;
         }
@@ -1085,17 +1085,17 @@
         float f23 = f11 * f7;
         float f24 = f12 * f7;
         float f25 = f13 * f7;
-        float f26 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f26 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         float f27;
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y - 1, z, 0)) {
-            f27 = block.getBlockBrightness(this.blockAccess, x, y - 1, z);
+            f27 = block.getBlockRenderBrightness(this.blockAccess, x, y - 1, z);
             tessellator8.setColorOpaque_F(f14 * f27, f18 * f27, f22 * f27);
             this.renderBottomFace(block, (double)x, (double)y, (double)z, block.getBlockTexture(this.blockAccess, x, y, z, 0));
             z9 = true;
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y + 1, z, 1)) {
-            f27 = block.getBlockBrightness(this.blockAccess, x, y + 1, z);
+            f27 = block.getBlockRenderBrightness(this.blockAccess, x, y + 1, z);
             if(block.maxY != 1.0D && !block.material.getIsLiquid()) {
                 f27 = f26;
             }
@@ -1106,7 +1106,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y, z - 1, 2)) {
-            f27 = block.getBlockBrightness(this.blockAccess, x, y, z - 1);
+            f27 = block.getBlockRenderBrightness(this.blockAccess, x, y, z - 1);
             if(block.minZ > 0.0D) {
                 f27 = f26;
             }
@@ -1117,7 +1117,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y, z + 1, 3)) {
-            f27 = block.getBlockBrightness(this.blockAccess, x, y, z + 1);
+            f27 = block.getBlockRenderBrightness(this.blockAccess, x, y, z + 1);
             if(block.maxZ < 1.0D) {
                 f27 = f26;
             }
@@ -1128,7 +1128,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x - 1, y, z, 4)) {
-            f27 = block.getBlockBrightness(this.blockAccess, x - 1, y, z);
+            f27 = block.getBlockRenderBrightness(this.blockAccess, x - 1, y, z);
             if(block.minX > 0.0D) {
                 f27 = f26;
             }
@@ -1139,7 +1139,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x + 1, y, z, 5)) {
-            f27 = block.getBlockBrightness(this.blockAccess, x + 1, y, z);
+            f27 = block.getBlockRenderBrightness(this.blockAccess, x + 1, y, z);
             if(block.maxX < 1.0D) {
                 f27 = f26;
             }
@@ -1180,17 +1180,17 @@
         float f24 = f12 * f7;
         float f25 = f13 * f7;
         float f26 = 0.0625F;
-        float f27 = block.getBlockBrightness(this.blockAccess, x, y, z);
+        float f27 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
         float f28;
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y - 1, z, 0)) {
-            f28 = block.getBlockBrightness(this.blockAccess, x, y - 1, z);
+            f28 = block.getBlockRenderBrightness(this.blockAccess, x, y - 1, z);
             tessellator8.setColorOpaque_F(f14 * f28, f18 * f28, f22 * f28);
             this.renderBottomFace(block, (double)x, (double)y, (double)z, block.getBlockTexture(this.blockAccess, x, y, z, 0));
             z9 = true;
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y + 1, z, 1)) {
-            f28 = block.getBlockBrightness(this.blockAccess, x, y + 1, z);
+            f28 = block.getBlockRenderBrightness(this.blockAccess, x, y + 1, z);
             if(block.maxY != 1.0D && !block.material.getIsLiquid()) {
                 f28 = f27;
             }
@@ -1201,7 +1201,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y, z - 1, 2)) {
-            f28 = block.getBlockBrightness(this.blockAccess, x, y, z - 1);
+            f28 = block.getBlockRenderBrightness(this.blockAccess, x, y, z - 1);
             if(block.minZ > 0.0D) {
                 f28 = f27;
             }
@@ -1214,7 +1214,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x, y, z + 1, 3)) {
-            f28 = block.getBlockBrightness(this.blockAccess, x, y, z + 1);
+            f28 = block.getBlockRenderBrightness(this.blockAccess, x, y, z + 1);
             if(block.maxZ < 1.0D) {
                 f28 = f27;
             }
@@ -1227,7 +1227,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x - 1, y, z, 4)) {
-            f28 = block.getBlockBrightness(this.blockAccess, x - 1, y, z);
+            f28 = block.getBlockRenderBrightness(this.blockAccess, x - 1, y, z);
             if(block.minX > 0.0D) {
                 f28 = f27;
             }
@@ -1240,7 +1240,7 @@
         }
 
         if(this.renderAllFaces || block.shouldSideBeRendered(this.blockAccess, x + 1, y, z, 5)) {
-            f28 = block.getBlockBrightness(this.blockAccess, x + 1, y, z);
+            f28 = block.getBlockRenderBrightness(this.blockAccess, x + 1, y, z);
             if(block.maxX < 1.0D) {
                 f28 = f27;
             }
@@ -1350,8 +1350,8 @@
         float f9 = 1.0F;
         float f10 = 0.8F;
         float f11 = 0.6F;
-        float f12 = block.getBlockBrightness(this.blockAccess, x, y, z);
-        float f13 = block.getBlockBrightness(this.blockAccess, x, y - 1, z);
+        float f12 = block.getBlockRenderBrightness(this.blockAccess, x, y, z);
+        float f13 = block.getBlockRenderBrightness(this.blockAccess, x, y - 1, z);
         if(blockDoor6.minY > 0.0D) {
             f13 = f12;
         }
@@ -1363,7 +1363,7 @@
         tessellator5.setColorOpaque_F(f8 * f13, f8 * f13, f8 * f13);
         this.renderBottomFace(block, (double)x, (double)y, (double)z, block.getBlockTexture(this.blockAccess, x, y, z, 0));
         z7 = true;
-        f13 = block.getBlockBrightness(this.blockAccess, x, y + 1, z);
+        f13 = block.getBlockRenderBrightness(this.blockAccess, x, y + 1, z);
         if(blockDoor6.maxY < 1.0D) {
             f13 = f12;
         }
@@ -1375,7 +1375,7 @@
         tessellator5.setColorOpaque_F(f9 * f13, f9 * f13, f9 * f13);
         this.renderTopFace(block, (double)x, (double)y, (double)z, block.getBlockTexture(this.blockAccess, x, y, z, 1));
         z7 = true;
-        f13 = block.getBlockBrightness(this.blockAccess, x, y, z - 1);
+        f13 = block.getBlockRenderBrightness(this.blockAccess, x, y, z - 1);
         if(blockDoor6.minZ > 0.0D) {
             f13 = f12;
         }
@@ -1394,7 +1394,7 @@
         this.renderEastFace(block, (double)x, (double)y, (double)z, i14);
         z7 = true;
         this.flipTexture = false;
-        f13 = block.getBlockBrightness(this.blockAccess, x, y, z + 1);
+        f13 = block.getBlockRenderBrightness(this.blockAccess, x, y, z + 1);
         if(blockDoor6.maxZ < 1.0D) {
             f13 = f12;
         }
@@ -1413,7 +1413,7 @@
         this.renderWestFace(block, (double)x, (double)y, (double)z, i14);
         z7 = true;
         this.flipTexture = false;
-        f13 = block.getBlockBrightness(this.blockAccess, x - 1, y, z);
+        f13 = block.getBlockRenderBrightness(this.blockAccess, x - 1, y, z);
         if(blockDoor6.minX > 0.0D) {
             f13 = f12;
         }
@@ -1432,7 +1432,7 @@
         this.renderNorthFace(block, (double)x, (double)y, (double)z, i14);
         z7 = true;
         this.flipTexture = false;
-        f13 = block.getBlockBrightness(this.blockAccess, x + 1, y, z);
+        f13 = block.getBlockRenderBrightness(this.blockAccess, x + 1, y, z);
         if(blockDoor6.maxX < 1.0D) {
             f13 = f12;
         }
@@ -1707,7 +1707,7 @@
 
     }
 
-    public void renderBlockOnInventory(Block block1) {
+    public void renderBlockOnInventory(Block block1, int metadata) {
         byte b2 = -1;
         Tessellator tessellator3 = Tessellator.instance;
         int i4 = block1.getRenderType();
@@ -1716,27 +1716,27 @@
             GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, -1.0F, 0.0F);
-            this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(0));
+            this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(0, metadata));
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, 1.0F, 0.0F);
-            this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(1));
+            this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(1, metadata));
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, 0.0F, -1.0F);
-            this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(2));
+            this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(2, metadata));
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, 0.0F, 1.0F);
-            this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(3));
+            this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(3, metadata));
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(-1.0F, 0.0F, 0.0F);
-            this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(4));
+            this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(4, metadata));
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(1.0F, 0.0F, 0.0F);
-            this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(5));
+            this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(5, metadata));
             tessellator3.draw();
             GL11.glTranslatef(0.5F, 0.5F, 0.5F);
         } else if(i4 == 1) {
@@ -1750,34 +1750,34 @@
             float f5 = 0.0625F;
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, -1.0F, 0.0F);
-            this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(0));
+            this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(0, metadata));
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, 1.0F, 0.0F);
-            this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(1));
+            this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(1, metadata));
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, 0.0F, -1.0F);
             tessellator3.setTranslationF(0.0F, 0.0F, f5);
-            this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(2));
+            this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(2, metadata));
             tessellator3.setTranslationF(0.0F, 0.0F, -f5);
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(0.0F, 0.0F, 1.0F);
             tessellator3.setTranslationF(0.0F, 0.0F, -f5);
-            this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(3));
+            this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(3, metadata));
             tessellator3.setTranslationF(0.0F, 0.0F, f5);
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(-1.0F, 0.0F, 0.0F);
             tessellator3.setTranslationF(f5, 0.0F, 0.0F);
-            this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(4));
+            this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(4, metadata));
             tessellator3.setTranslationF(-f5, 0.0F, 0.0F);
             tessellator3.draw();
             tessellator3.startDrawingQuads();
             tessellator3.setNormal(1.0F, 0.0F, 0.0F);
             tessellator3.setTranslationF(-f5, 0.0F, 0.0F);
-            this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(5));
+            this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(5, metadata));
             tessellator3.setTranslationF(f5, 0.0F, 0.0F);
             tessellator3.draw();
             GL11.glTranslatef(0.5F, 0.5F, 0.5F);
@@ -1806,27 +1806,27 @@
                     GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, -1.0F, 0.0F);
-                    this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(0));
+                    this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(0, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, 1.0F, 0.0F);
-                    this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(1));
+                    this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(1, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, 0.0F, -1.0F);
-                    this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(2));
+                    this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(2, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, 0.0F, 1.0F);
-                    this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(3));
+                    this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(3, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(-1.0F, 0.0F, 0.0F);
-                    this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(4));
+                    this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(4, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(1.0F, 0.0F, 0.0F);
-                    this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(5));
+                    this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(5, metadata));
                     tessellator3.draw();
                     GL11.glTranslatef(0.5F, 0.5F, 0.5F);
                 }
@@ -1853,27 +1853,27 @@
                     GL11.glTranslatef(-0.5F, -0.5F, -0.5F);
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, -1.0F, 0.0F);
-                    this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(0));
+                    this.renderBottomFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(0, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, 1.0F, 0.0F);
-                    this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(1));
+                    this.renderTopFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(1, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, 0.0F, -1.0F);
-                    this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(2));
+                    this.renderEastFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(2, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(0.0F, 0.0F, 1.0F);
-                    this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(3));
+                    this.renderWestFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(3, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(-1.0F, 0.0F, 0.0F);
-                    this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(4));
+                    this.renderNorthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(4, metadata));
                     tessellator3.draw();
                     tessellator3.startDrawingQuads();
                     tessellator3.setNormal(1.0F, 0.0F, 0.0F);
-                    this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSide(5));
+                    this.renderSouthFace(block1, 0.0D, 0.0D, 0.0D, block1.getBlockTextureFromSideAndMetadata(5, metadata));
                     tessellator3.draw();
                     GL11.glTranslatef(0.5F, 0.5F, 0.5F);
                 }
