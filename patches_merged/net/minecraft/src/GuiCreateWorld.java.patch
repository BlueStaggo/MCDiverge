--- /dev/null
+++ b/net/minecraft/src/GuiCreateWorld.java
@@ -1,0 +1,134 @@
+package net.minecraft.src;
+
+import java.util.Random;
+
+import io.github.bluestaggo.mcdiverge.CreateWorldInfo;
+import org.lwjgl.input.Keyboard;
+
+public class GuiCreateWorld extends GuiScreen {
+    private final GuiScreen parent;
+    private GuiTextField textboxWorldName;
+    private GuiTextField textboxSeed;
+    private String displayName;
+    private boolean createClicked;
+    private final int index;
+    private boolean snowy;
+    private boolean creative;
+
+    public GuiCreateWorld(GuiScreen guiScreen1, int index) {
+        this.parent = guiScreen1;
+        this.index = index;
+    }
+
+    public void updateScreen() {
+        this.textboxWorldName.updateCursorCounter();
+        this.textboxSeed.updateCursorCounter();
+    }
+
+    public void initGui() {
+        Keyboard.enableRepeatEvents(true);
+        this.controlList.clear();
+        this.controlList.add(new GuiButton(0, this.width / 2 - 100, this.height / 4 + 96 + 12, "Create New World"));
+        this.controlList.add(new GuiButton(1, this.width / 2 - 100, this.height / 4 + 120 + 12, "Cancel"));
+        this.textboxWorldName = new GuiTextField(this, this.fontRenderer, this.width / 4 - 100, 60, 200, 20, "World " + index);
+        this.textboxWorldName.isFocused = true;
+        this.textboxWorldName.setMaxStringLength(32);
+        this.textboxSeed = new GuiTextField(this, this.fontRenderer, this.width / 4 * 3 - 100, 60, 200, 20, "");
+        this.controlList.add(new GuiButton(2, this.width / 2 - 156, 100, 150, 20, "Type: NORMAL"));
+        this.controlList.add(new GuiButton(3, this.width / 2 + 6, 100, 150, 20, "Gamemode: SURVIVAL"));
+        this.func_22129_j();
+    }
+
+    private void func_22129_j() {
+        this.displayName = this.textboxWorldName.getText().trim();
+        if(this.displayName.isEmpty()) {
+            this.displayName = "World" + index;
+        }
+    }
+
+    public void onGuiClosed() {
+        Keyboard.enableRepeatEvents(false);
+    }
+
+    protected void actionPerformed(GuiButton guiButton1) {
+        if(!guiButton1.enabled) {
+            return;
+        }
+        switch (guiButton1.id) {
+            case 0:
+                this.mc.displayGuiScreen((GuiScreen)null);
+                if(this.createClicked) {
+                    return;
+                }
+
+                this.createClicked = true;
+                long j2 = (new Random()).nextLong();
+                String string4 = this.textboxSeed.getText();
+                if(string4 != null && string4.length() > 0) {
+                    try {
+                        long j5 = Long.parseLong(string4);
+                        if(j5 != 0L) {
+                            j2 = j5;
+                        }
+                    } catch (NumberFormatException numberFormatException7) {
+                        j2 = (long)string4.hashCode();
+                    }
+                }
+
+                this.mc.playerController = new PlayerControllerSP(this.mc);
+                this.mc.startWorld("World" + index, new CreateWorldInfo()
+                    .withName(this.displayName)
+                    .withSeed(j2)
+                    .withSnow(this.snowy)
+                    .withCreative(this.creative));
+                this.mc.displayGuiScreen((GuiScreen)null);
+                break;
+
+            case 1:
+                this.mc.displayGuiScreen(this.parent);
+                break;
+
+            case 2:
+                this.snowy = !this.snowy;
+                guiButton1.displayString = "Type: " + (this.snowy ? "SNOW" : "NORMAL");
+                break;
+
+            case 3:
+                this.creative = !this.creative;
+                guiButton1.displayString = "Gamemode: " + (this.creative ? "CREATIVE" : "SURVIVAL");
+                break;
+        }
+    }
+
+    protected void keyTyped(char c1, int i2) {
+        if(this.textboxWorldName.isFocused) {
+            this.textboxWorldName.textboxKeyTyped(c1, i2);
+        } else {
+            this.textboxSeed.textboxKeyTyped(c1, i2);
+        }
+
+        if(c1 == 13) {
+            this.actionPerformed((GuiButton)this.controlList.get(0));
+        }
+
+        ((GuiButton)this.controlList.get(0)).enabled = this.textboxWorldName.getText().length() > 0;
+        this.func_22129_j();
+    }
+
+    protected void mouseClicked(int i1, int i2, int i3) {
+        super.mouseClicked(i1, i2, i3);
+        this.textboxWorldName.mouseClicked(i1, i2, i3);
+        this.textboxSeed.mouseClicked(i1, i2, i3);
+    }
+
+    public void drawScreen(int i1, int i2, float f3) {
+        this.drawDefaultBackground();
+        this.drawCenteredString(this.fontRenderer, "Create new world", this.width / 2, this.height / 4 - 40, 0xFFFFFF);
+        this.drawString(this.fontRenderer, "World Name", this.width / 4 - 100, 47, 10526880);
+        this.drawString(this.fontRenderer, "Seed for the World Generator", this.width / 4 * 3 - 100, 47, 10526880);
+        this.drawString(this.fontRenderer, "Leave blank for a random seed", this.width / 4 * 3 - 100, 83, 10526880);
+        this.textboxWorldName.drawTextBox();
+        this.textboxSeed.drawTextBox();
+        super.drawScreen(i1, i2, f3);
+    }
+}
