--- a/net/minecraft/src/CraftingManager.java
+++ b/net/minecraft/src/CraftingManager.java
@@ -1,5 +1,7 @@
 package net.minecraft.src;
 
+import io.github.bluestaggo.mcdiverge.Pair;
+
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
@@ -20,46 +22,61 @@
         (new RecipesFood()).addRecipes(this);
         (new RecipesCrafting()).addRecipes(this);
         (new RecipesArmor()).addRecipes(this);
-        this.addRecipe(new ItemStack(Item.paper, 3), new Object[]{"###", '#', Item.reed});
-        this.addRecipe(new ItemStack(Item.book, 1), new Object[]{"#", "#", "#", '#', Item.paper});
-        this.addRecipe(new ItemStack(Block.fence, 2), new Object[]{"###", "###", '#', Item.stick});
-        this.addRecipe(new ItemStack(Block.jukebox, 1), new Object[]{"###", "#X#", "###", '#', Block.planks, 'X', Item.diamond});
-        this.addRecipe(new ItemStack(Block.bookshelf, 1), new Object[]{"###", "XXX", "###", '#', Block.planks, 'X', Item.book});
-        this.addRecipe(new ItemStack(Block.blockSnow, 1), new Object[]{"##", "##", '#', Item.snowball});
-        this.addRecipe(new ItemStack(Block.blockClay, 1), new Object[]{"##", "##", '#', Item.clay});
-        this.addRecipe(new ItemStack(Block.brick, 1), new Object[]{"##", "##", '#', Item.brick});
-        this.addRecipe(new ItemStack(Block.cloth, 1), new Object[]{"###", "###", "###", '#', Item.silk});
-        this.addRecipe(new ItemStack(Block.tnt, 1), new Object[]{"X#X", "#X#", "X#X", 'X', Item.gunpowder, '#', Block.sand});
-        this.addRecipe(new ItemStack(Block.stairSingle, 3), new Object[]{"###", '#', Block.cobblestone});
-        this.addRecipe(new ItemStack(Block.ladder, 1), new Object[]{"# #", "###", "# #", '#', Item.stick});
-        this.addRecipe(new ItemStack(Item.doorWood, 1), new Object[]{"##", "##", "##", '#', Block.planks});
-        this.addRecipe(new ItemStack(Item.doorSteel, 1), new Object[]{"##", "##", "##", '#', Item.ingotIron});
-        this.addRecipe(new ItemStack(Item.sign, 1), new Object[]{"###", "###", " X ", '#', Block.planks, 'X', Item.stick});
-        this.addRecipe(new ItemStack(Block.planks, 4), new Object[]{"#", '#', Block.wood});
-        this.addRecipe(new ItemStack(Item.stick, 4), new Object[]{"#", "#", '#', Block.planks});
-        this.addRecipe(new ItemStack(Block.torch, 4), new Object[]{"X", "#", 'X', Item.coal, '#', Item.stick});
-        this.addRecipe(new ItemStack(Item.bowlEmpty, 4), new Object[]{"# #", " # ", '#', Block.planks});
-        this.addRecipe(new ItemStack(Block.minecartTrack, 16), new Object[]{"X X", "X#X", "X X", 'X', Item.ingotIron, '#', Item.stick});
-        this.addRecipe(new ItemStack(Item.minecartEmpty, 1), new Object[]{"# #", "###", '#', Item.ingotIron});
-        this.addRecipe(new ItemStack(Item.minecartBox, 1), new Object[]{"A", "B", 'A', Block.chest, 'B', Item.minecartEmpty});
-        this.addRecipe(new ItemStack(Item.minecartEngine, 1), new Object[]{"A", "B", 'A', Block.stoneOvenIdle, 'B', Item.minecartEmpty});
-        this.addRecipe(new ItemStack(Item.boat, 1), new Object[]{"# #", "###", '#', Block.planks});
-        this.addRecipe(new ItemStack(Item.bucketEmpty, 1), new Object[]{"# #", " # ", '#', Item.ingotIron});
-        this.addRecipe(new ItemStack(Item.striker, 1), new Object[]{"A ", " B", 'A', Item.ingotIron, 'B', Item.flint});
-        this.addRecipe(new ItemStack(Item.bread, 1), new Object[]{"###", '#', Item.wheat});
-        this.addRecipe(new ItemStack(Block.stairCompactWood, 4), new Object[]{"#  ", "## ", "###", '#', Block.planks});
-        this.addRecipe(new ItemStack(Item.fishingRod, 1), new Object[]{"  #", " #X", "# X", '#', Item.stick, 'X', Item.silk});
-        this.addRecipe(new ItemStack(Block.stairCompactStone, 4), new Object[]{"#  ", "## ", "###", '#', Block.cobblestone});
-        this.addRecipe(new ItemStack(Item.painting, 1), new Object[]{"###", "#X#", "###", '#', Item.stick, 'X', Block.cloth});
-        this.addRecipe(new ItemStack(Item.appleGold, 1), new Object[]{"###", "#X#", "###", '#', Block.blockGold, 'X', Item.appleRed});
-        this.addRecipe(new ItemStack(Block.lever, 1), new Object[]{"X", "#", '#', Block.cobblestone, 'X', Item.stick});
-        this.addRecipe(new ItemStack(Block.torchRedstoneActive, 1), new Object[]{"X", "#", '#', Item.stick, 'X', Item.redstone});
-        this.addRecipe(new ItemStack(Item.compass, 1), new Object[]{" # ", "#X#", " # ", '#', Item.ingotIron, 'X', Item.redstone});
-        this.addRecipe(new ItemStack(Block.button, 1), new Object[]{"#", "#", '#', Block.stone});
-        this.addRecipe(new ItemStack(Block.pressurePlateStone, 1), new Object[]{"###", '#', Block.stone});
-        this.addRecipe(new ItemStack(Block.pressurePlateWood, 1), new Object[]{"###", '#', Block.planks});
+        this.addRecipe(new ItemStack(Item.paper, 3), "###", '#', Item.reed);
+        this.addRecipe(new ItemStack(Item.book, 1), "#", "#", "#", '#', Item.paper);
+        this.addRecipe(new ItemStack(Block.fence, 2), "###", "###", '#', Item.stick);
+        this.addRecipe(new ItemStack(Block.jukebox, 1), "###", "#X#", "###", '#', Block.planks, 'X', Item.diamond);
+        this.addRecipe(new ItemStack(Block.bookshelf, 1), "###", "XXX", "###", '#', Block.planks, 'X', Item.book);
+        this.addRecipe(new ItemStack(Block.blockSnow, 1), "##", "##", '#', Item.snowball);
+        this.addRecipe(new ItemStack(Block.blockClay, 1), "##", "##", '#', Item.clay);
+        this.addRecipe(new ItemStack(Block.brick, 1), "##", "##", '#', Item.brick);
+        this.addRecipe(new ItemStack(Block.cloth, 1), "###", "###", "###", '#', Item.silk);
+        this.addRecipe(new ItemStack(Block.tnt, 1), "X#X", "#X#", "X#X", 'X', Item.gunpowder, '#', Block.sand);
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 0), "###", '#', new Pair<>(Block.cobblestone, 0));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 1), "###", '#', new Pair<>(Block.cobblestone, 1));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 2), "###", '#', new Pair<>(Block.cobblestone, 2));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 3), "###", '#', new Pair<>(Block.stone, 0));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 4), "###", '#', new Pair<>(Block.stone, 1));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 5), "###", '#', new Pair<>(Block.stone, 2));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 6), "###", '#', new Pair<>(Block.polishedStone, 0));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 7), "###", '#', new Pair<>(Block.polishedStone, 1));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 8), "###", '#', new Pair<>(Block.polishedStone, 2));
+        this.addRecipe(new ItemStack(Block.stairSingle, 6, 9), "###", '#', Block.brick);
+        this.addRecipe(new ItemStack(Block.woodStairSingle, 6, 0), "###", '#', new Pair<>(Block.planks, 0));
+        this.addRecipe(new ItemStack(Block.ladder, 1), "# #", "###", "# #", '#', Item.stick);
+        this.addRecipe(new ItemStack(Item.doorWood, 1), "##", "##", "##", '#', Block.planks);
+        this.addRecipe(new ItemStack(Item.doorSteel, 1), "##", "##", "##", '#', Item.ingotIron);
+        this.addRecipe(new ItemStack(Item.sign, 1), "###", "###", " X ", '#', Block.planks, 'X', Item.stick);
+        this.addRecipe(new ItemStack(Block.planks, 4), "#", '#', Block.wood);
+        this.addRecipe(new ItemStack(Item.stick, 4), "#", "#", '#', Block.planks);
+        this.addRecipe(new ItemStack(Block.torch, 4), "X", "#", 'X', Item.coal, '#', Item.stick);
+        this.addRecipe(new ItemStack(Item.bowlEmpty, 4), "# #", " # ", '#', Block.planks);
+        this.addRecipe(new ItemStack(Block.minecartTrack, 16), "X X", "X#X", "X X", 'X', Item.ingotIron, '#', Item.stick);
+        this.addRecipe(new ItemStack(Item.minecartEmpty, 1), "# #", "###", '#', Item.ingotIron);
+        this.addRecipe(new ItemStack(Item.minecartBox, 1), "A", "B", 'A', Block.chest, 'B', Item.minecartEmpty);
+        this.addRecipe(new ItemStack(Item.minecartEngine, 1), "A", "B", 'A', Block.stoneOvenIdle, 'B', Item.minecartEmpty);
+        this.addRecipe(new ItemStack(Item.boat, 1), "# #", "###", '#', Block.planks);
+        this.addRecipe(new ItemStack(Item.bucketEmpty, 1), "# #", " # ", '#', Item.ingotIron);
+        this.addRecipe(new ItemStack(Item.striker, 1), "A ", " B", 'A', Item.ingotIron, 'B', Item.flint);
+        this.addRecipe(new ItemStack(Item.bread, 1), "###", '#', Item.wheat);
+        this.addRecipe(new ItemStack(Block.stairCompactWood, 8), "#  ", "## ", "###", '#', Block.planks);
+        this.addRecipe(new ItemStack(Item.fishingRod, 1), "  #", " #X", "# X", '#', Item.stick, 'X', Item.silk);
+        this.addRecipe(new ItemStack(Block.stairCompactStone, 8), "#  ", "## ", "###", '#', new Pair<>(Block.cobblestone, 0));
+        this.addRecipe(new ItemStack(Item.painting, 1), "###", "#X#", "###", '#', Item.stick, 'X', Block.cloth);
+        this.addRecipe(new ItemStack(Item.appleGold, 1), "###", "#X#", "###", '#', Block.blockGold, 'X', Item.appleRed);
+        this.addRecipe(new ItemStack(Block.lever, 1), "X", "#", '#', Block.cobblestone, 'X', Item.stick);
+        this.addRecipe(new ItemStack(Block.torchRedstoneActive, 1), "X", "#", '#', Item.stick, 'X', Item.redstone);
+        this.addRecipe(new ItemStack(Item.compass, 1), " # ", "#X#", " # ", '#', Item.ingotIron, 'X', Item.redstone);
+        this.addRecipe(new ItemStack(Block.button, 1), "#", "#", '#', Block.stone);
+        this.addRecipe(new ItemStack(Block.pressurePlateStone, 1), "###", '#', Block.stone);
+        this.addRecipe(new ItemStack(Block.pressurePlateWood, 1), "###", '#', Block.planks);
+        this.addRecipe(new ItemStack(Block.polishedStone, 4, 0), "##", "##", '#', new Pair<>(Block.stone, 0));
+        this.addRecipe(new ItemStack(Block.polishedStone, 4, 1), "##", "##", '#', new Pair<>(Block.stone, 1));
+        this.addRecipe(new ItemStack(Block.polishedStone, 4, 2), "##", "##", '#', new Pair<>(Block.stone, 2));
+        this.addRecipe(new ItemStack(Item.quiver, 1), "##/", "##/", "## ", '#', Item.leather, '/', Item.stick);
+        this.addRecipe(new ItemStack(Item.wardingRing, 1), " o ", "X X", " X ", 'o', Item.ruby, 'X', Item.sapphire);
+        this.addRecipe(new ItemStack(Item.repairKit, 1), "=o=", "###", '=', Block.stone, 'o', Item.sapphire, '#', Item.ingotIron);
         Collections.sort(this.recipes, new RecipeSorter(this));
-        System.out.println(this.recipes.size() + " recipes");
     }
 
     void addRecipe(ItemStack itemStack1, Object... object2) {
@@ -86,41 +103,68 @@
         }
 
         HashMap hashMap12;
-        int i15;
+        Pair<Integer, Integer> i15;
         for(hashMap12 = new HashMap(); i4 < object2.length; i4 += 2) {
+            Object value = object2[i4 + 1];
             Character character13 = (Character)object2[i4];
-            i15 = 0;
-            if(object2[i4 + 1] instanceof Item) {
-                i15 = ((Item)object2[i4 + 1]).shiftedIndex;
-            } else if(object2[i4 + 1] instanceof Block) {
-                i15 = ((Block)object2[i4 + 1]).blockID;
+
+            i15 = new Pair<>( -1, -1 );
+            if(value instanceof Pair && ((Pair<?, ?>) value).item1 instanceof Integer) {
+                if(((Pair<?, ?>) value).item0 instanceof Integer) {
+                    i15 = (Pair<Integer, Integer>)value;
+                } else if(((Pair<?, ?>) value).item0 instanceof Item) {
+                    Pair<Item, Integer> item = (Pair<Item, Integer>) value;
+                    i15 = new Pair<>( item.item0.shiftedIndex, item.item1 );
+                } else if(((Pair<?, ?>) value).item0 instanceof Block) {
+                    Pair<Block, Integer> item = (Pair<Block, Integer>) value;
+                    i15 = new Pair<>( item.item0.blockID, item.item1 );
+                }
+            } else if(value instanceof Item) {
+                i15 = new Pair<>( ((Item)object2[i4 + 1]).shiftedIndex, -1 );
+            } else if(value instanceof Block) {
+                i15 = new Pair<>( ((Block)object2[i4 + 1]).blockID, -1 );
             }
 
             hashMap12.put(character13, i15);
         }
 
         int[] i14 = new int[i5 * i6];
+        int[] metadata = new int[i5 * i6];
 
-        for(i15 = 0; i15 < i5 * i6; ++i15) {
-            char c10 = string3.charAt(i15);
+        for(int i16 = 0; i16 < i5 * i6; ++i16) {
+            char c10 = string3.charAt(i16);
             if(hashMap12.containsKey(c10)) {
-                i14[i15] = ((Integer)hashMap12.get(c10)).intValue();
+                i14[i16] = ((Pair<Integer, Integer>) hashMap12.get(c10)).item0;
+                metadata[i16] = ((Pair<Integer, Integer>) hashMap12.get(c10)).item1;
             } else {
-                i14[i15] = -1;
+                i14[i16] = -1;
+                metadata[i16] = -1;
             }
         }
 
-        this.recipes.add(new CraftingRecipe(i5, i6, i14, itemStack1));
+        this.recipes.add(new CraftingRecipe(i5, i6, i14, metadata, itemStack1));
     }
 
-    public ItemStack findMatchingRecipe(int[] i1) {
+    public ItemStack findMatchingRecipe(int[] i1, int[] metadata) {
         for(int i2 = 0; i2 < this.recipes.size(); ++i2) {
             CraftingRecipe craftingRecipe3 = (CraftingRecipe)this.recipes.get(i2);
-            if(craftingRecipe3.matches(i1)) {
-                return craftingRecipe3.getCraftingResult(i1);
+            if(craftingRecipe3.matches(i1, metadata)) {
+                return craftingRecipe3.getCraftingResult();
             }
         }
 
         return null;
+    }
+
+    public ItemStack[] getRecipeAsItems(int i) {
+        CraftingRecipe recipe = (CraftingRecipe)recipes.get(i);
+        if (recipe == null) {
+            return null;
+        }
+        return recipe.asItemStacks();
+    }
+
+    public int count() {
+        return this.recipes.size();
     }
 }
