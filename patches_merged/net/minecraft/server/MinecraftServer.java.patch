--- a/net/minecraft/server/MinecraftServer.java
+++ b/net/minecraft/server/MinecraftServer.java
@@ -12,28 +12,7 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
-import net.minecraft.src.AxisAlignedBB;
-import net.minecraft.src.ConsoleLogManager;
-import net.minecraft.src.EntityPlayerMP;
-import net.minecraft.src.EntityTracker;
-import net.minecraft.src.ICommandListener;
-import net.minecraft.src.IProgressUpdate;
-import net.minecraft.src.IUpdatePlayerListBox;
-import net.minecraft.src.Item;
-import net.minecraft.src.ItemStack;
-import net.minecraft.src.NetworkListenThread;
-import net.minecraft.src.Packet3Chat;
-import net.minecraft.src.Packet4UpdateTime;
-import net.minecraft.src.PropertyManager;
-import net.minecraft.src.ServerCommand;
-import net.minecraft.src.ServerConfigurationManager;
-import net.minecraft.src.ServerGUI;
-import net.minecraft.src.ThreadCommandReader;
-import net.minecraft.src.ThreadServerApplication;
-import net.minecraft.src.ThreadSleepForeverServer;
-import net.minecraft.src.Vec3D;
-import net.minecraft.src.WorldManager;
-import net.minecraft.src.WorldServer;
+import net.minecraft.src.*;
 
 public class MinecraftServer implements ICommandListener, Runnable {
     public static Logger logger = Logger.getLogger("Minecraft");
@@ -106,7 +85,7 @@
 
     private void initWorld(String worldName) {
         logger.info("Preparing start region");
-        this.worldMngr = new WorldServer(new File("."), worldName, this.propertyManagerObj.getBooleanProperty("monsters", false));
+        this.worldMngr = new WorldServer(new File("."), worldName, this.propertyManagerObj.getBooleanProperty("monsters", false), this.propertyManagerObj.getCreateWorldInfo());
         this.worldMngr.addWorldAccess(new WorldManager(this));
         this.worldMngr.difficultySetting = 1;
         this.configManager.setPlayerManager(this.worldMngr);
@@ -169,7 +148,7 @@
                     long j5 = System.currentTimeMillis();
                     long j7 = j5 - j1;
                     if(j7 > 2000L) {
-                        logger.warning("Can\'t keep up! Did the system time change, or is the server overloaded?");
+                        logger.warning("Can't keep up! Did the system time change, or is the server overloaded?");
                         j7 = 2000L;
                     }
 
@@ -236,6 +215,7 @@
 
         int i6;
         for(i6 = 0; i6 < arrayList1.size(); ++i6) {
+
             playerList.remove(arrayList1.get(i6));
         }
 
@@ -265,7 +245,6 @@
         } catch (Exception exception5) {
             logger.log(Level.WARNING, "Unexpected exception while parsing console command", exception5);
         }
-
     }
 
     public void addCommand(String command, ICommandListener commandListener) {
@@ -343,7 +322,7 @@
                                 entityPlayerMP12.playerNetServerHandler.kickPlayer("Kicked by admin");
                                 this.print(string4, "Kicking " + entityPlayerMP12.username);
                             } else {
-                                iCommandListener3.addHelpCommandMessage("Can\'t find user " + string11 + ". No kick.");
+                                iCommandListener3.addHelpCommandMessage("Can't find user " + string11 + ". No kick.");
                             }
                         } else {
                             String[] string5;
@@ -354,9 +333,9 @@
                                     entityPlayerMP12 = this.configManager.getPlayerEntity(string5[1]);
                                     entityPlayerMP7 = this.configManager.getPlayerEntity(string5[2]);
                                     if(entityPlayerMP12 == null) {
-                                        iCommandListener3.addHelpCommandMessage("Can\'t find user " + string5[1] + ". No tp.");
+                                        iCommandListener3.addHelpCommandMessage("Can't find user " + string5[1] + ". No tp.");
                                     } else if(entityPlayerMP7 == null) {
-                                        iCommandListener3.addHelpCommandMessage("Can\'t find user " + string5[2] + ". No tp.");
+                                        iCommandListener3.addHelpCommandMessage("Can't find user " + string5[2] + ". No tp.");
                                     } else {
                                         entityPlayerMP12.playerNetServerHandler.teleportTo(entityPlayerMP7.posX, entityPlayerMP7.posY, entityPlayerMP7.posZ, entityPlayerMP7.rotationYaw, entityPlayerMP7.rotationPitch);
                                         this.print(string4, "Teleporting " + string5[1] + " to " + string5[2] + ".");
@@ -392,13 +371,13 @@
 
                                             entityPlayerMP7.dropPlayerItem(new ItemStack(i8, i9));
                                         } else {
-                                            iCommandListener3.addHelpCommandMessage("There\'s no item with id " + i8);
+                                            iCommandListener3.addHelpCommandMessage("There's no item with id " + i8);
                                         }
                                     } catch (NumberFormatException numberFormatException10) {
-                                        iCommandListener3.addHelpCommandMessage("There\'s no item with id " + string5[2]);
+                                        iCommandListener3.addHelpCommandMessage("There's no item with id " + string5[2]);
                                     }
                                 } else {
-                                    iCommandListener3.addHelpCommandMessage("Can\'t find user " + string6);
+                                    iCommandListener3.addHelpCommandMessage("Can't find user " + string6);
                                 }
                             } else if(string2.toLowerCase().startsWith("say ")) {
                                 string2 = string2.substring(string2.indexOf(" ")).trim();
