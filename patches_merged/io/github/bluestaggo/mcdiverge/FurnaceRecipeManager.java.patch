--- /dev/null
+++ b/io/github/bluestaggo/mcdiverge/FurnaceRecipeManager.java
@@ -1,0 +1,67 @@
+package io.github.bluestaggo.mcdiverge;
+
+import net.minecraft.src.Block;
+import net.minecraft.src.Item;
+import net.minecraft.src.ItemStack;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class FurnaceRecipeManager {
+    private static final FurnaceRecipeManager instance = new FurnaceRecipeManager();
+    private List<FurnaceRecipe> recipes = new ArrayList<>();
+
+    public static final FurnaceRecipeManager getInstance() {
+        return instance;
+    }
+
+    private FurnaceRecipeManager() {
+        addRecipe(Block.oreCoal.blockID, Item.coal.shiftedIndex, -1, 0);
+        addRecipe(Block.oreIron.blockID, Item.ingotIron.shiftedIndex, -1, 0);
+        addRecipe(Block.oreGold.blockID, Item.ingotGold.shiftedIndex, -1, 0);
+        addRecipe(Block.oreDiamond.blockID, Item.diamond.shiftedIndex, -1, 0);
+        addRecipe(Block.oreRuby.blockID, Item.ruby.shiftedIndex, -1, 0);
+        addRecipe(Block.oreSapphire.blockID, Item.sapphire.shiftedIndex, -1, 0);
+        addRecipe(Block.sand.blockID, Block.glass.blockID, 0, 0);
+        addRecipe(Item.porkRaw.shiftedIndex, Item.porkCooked.shiftedIndex, 0, 0);
+        addRecipe(Item.beefRaw.shiftedIndex, Item.beefCooked.shiftedIndex, 0, 0);
+        addRecipe(Item.chickenRaw.shiftedIndex, Item.chickenCooked.shiftedIndex, 0, 0);
+        addRecipe(Item.muttonRaw.shiftedIndex, Item.muttonCooked.shiftedIndex, 0, 0);
+        addRecipe(Block.cobblestone.blockID, Block.stone.blockID, -1, -1);
+        addRecipe(Item.clay.shiftedIndex, Item.brick.shiftedIndex, 0, 0);
+        addRecipe(Item.starChunk.shiftedIndex, Item.starDust.shiftedIndex, 0, 0);
+    }
+
+    private void addRecipe(int input, int output, int inputMeta, int outputMeta) {
+        recipes.add(new FurnaceRecipe(new ItemStack(input, 1).withMetadata(inputMeta),
+                                      new ItemStack(output, 1).withMetadata(outputMeta)));
+    }
+
+    public ItemStack findMatchingRecipe(ItemStack input) {
+        for (FurnaceRecipe recipe : recipes) {
+            if (recipe.canSmelt(input)) {
+                return recipe.getOutput(input);
+            }
+        }
+        return null;
+    }
+
+    public int count() {
+        return this.recipes.size();
+    }
+
+    public ItemStack[] getRecipeAsItems(int i) {
+        ItemStack in = this.recipes.get(i).getInput();
+        ItemStack out = this.recipes.get(i).getOutput(in);
+        if (in.itemMetadata == -1) {
+            in.itemMetadata = 0;
+        }
+        if (out.itemMetadata == -1) {
+            out.itemMetadata = 0;
+        }
+
+        return new ItemStack[] { in, new ItemStack(Block.stoneOvenIdle),
+                                 null, null, null, null, null, null, null,
+                                 out };
+    }
+}
